name: Docker Build deploy
on:
  push:
    branches: [ main ]

env:
   DEPLOYMENT_NAME: ctse-customer
   PROJECT_ID: ${{ secrets.GKE_PROJECT }}
   GKE_CLUSTER: github-actions-customer
   GKE_ZONE: us-central1-c

#env:
#  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
#  GKE_CLUSTER: github-actions-customer
#  GKE_ZONE: us-central1-c
#  DEPLOYMENT_NAME: github-actions-customer-deployment
#  IMAGE: github-actions-customer-image
jobs:
setup-build-publish:
    name: Setup Build Publish Deploy
    runs-on: ubuntu-latest
    steps:
    - run: echo "Build Started"
    -
     name: checkoout repository    
     uses: actions/checkout@v3
    - run: echo "Repository cloned to Ubuntu" 

    - 
     name: Login to Docker Hub
     uses: docker/login-action@v2
     with:
       username: ${{ secrets.DOCKER_USERNAME }}
       password: ${{ secrets.DOCKER_TOKEN }}

    -
     name: Set up QEMU
     uses: docker/setup-qemu-action@v2
    -
     name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v2
    -
     name: Build and push
     uses: docker/build-push-action@v3
     with:
       push: true
       tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.DEPLOYMENT_NAME }}:latest

  deploy:
     needs: setup-build-publish
     name: deploy to GCP
     runs-on: ubuntu-latest
     steps:
       -
         run: echo "Deployment Started"  



    #- name: run shell script
    #  run: echo commit hash is ${{ github.sha }}
    #- name: Login to Docker Hub
    #  uses: docker/login-action@v1
    #  with:
    #    username: ${{ secrets.DOCKER_USERNAME }}
    #    password: ${{ secrets.DOCKER_TOKEN }}
    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag my-image-name:${{ github.sha  }}
    #- name: Build and push
    #  uses: docker/build-push-action@v2
    #  with:
    #    context: .
    #    file: ./Dockerfile
    #    push: true
    #    tags: ${{ secrets.DOCKER_USERNAME }}/ctse-customer:${{ github.sha }}

   # - id: "auth"
   #     name: "Authenticate to Google Cloud"
   #     uses: "google-github-actions/auth@v0"
    #    with:
    #      credentials_json: "${{ secrets.GKE_SA_KEY }}"

      # Setup gcloud CLI
    #  - name: Set up Cloud SDK
    #    uses: google-github-actions/setup-gcloud@v0

      # Get the GKE credentials so we can deploy to the cluster
    #  - run: |-
     #     gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Deploy sample image to the GKE cluster
    #  - name: Deploy
     #   run: |-
       #   kubectl apply -f deployment.yaml -f service.yaml
       #   kubectl rollout status deployment/$DEPLOYMENT_NAME
        #  kubectl get services -o wide    